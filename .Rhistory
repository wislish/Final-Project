x
mead(x)
mean(x)
?image
t?
?t
a <- matrix(rnorm(400),nrow=40)
a
t(a)
b <- t(a)
View(a)
View(b)
b[,nrow(a):1]
c <- b[,nrow(a):1]
View(c)
?rowMeans()
?svd
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
## Reduce data by dropping unnecessary variables
NEI_Reduced <- NEI[ , c( 'Emissions', 'year' ) ]
## Split data.frame on year and return a list
NEI_EmissionsByYear <- split( NEI_Reduced[ , 'Emissions' ],
NEI_Reduced$year )
str(NEI_EmissionsByYear)
?split()
str(NEI_Reduced)
NEI_EmissionsByYear[1]
head(NEI_EmissionsByYear)
str(NEI_EmissionsByYear)
totalPM25ByYear <- lapply( NEI_EmissionsByYear,
FUN = sum )
barplot(                                            ## Create plot
unlist( totalPM25ByYear ) * 1e-6,             ## Set x-coords for plot
names.arg = names(totalPM25ByYear),           ## Set y-coords for plot
col = c("lightblue",
"mistyrose",
"lightcyan",
"lavender"),                          ## Set plot color to black
xlab = "",                                    ## Set xlab to 'NO' label
ylab = mtext(
text = expression(
'PM'[2.5]*' Emissions '*bolditalic( '( megatons )' ) ),
cex = 1.25,
side = 2,
line = 2 ),       ## Annotate with x-axis label
ylim = c( 0.00, 8.00 ),
main = mtext(
text = expression(
bold(
'Total U.S. PM'[2.5]*' Emissions') ),
line = 2,
cex = 2 ) )
?tapply
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
Total_Emission<-tapply(NEI$Emissions,NEI$year,sum)
str(Total_Emission)
fac <- factor(rep(1:3, length = 17), levels = 1:5)
fac
str(fac)
type(fac)
fac[1]
fac[5]
summary(fac)
tapply(1:17, fac, sum)
a <- tapply(1:17, fac, sum)
a
str(a)
summary(a)
sum(fac)
year <- rep(2007:2009,each=4)
year
province <- rep(A:c,each=4)
province <- rep("A":"c",each=4)
province <- rep("A","B","c",each=4)
province <- rep(c("A","B","c"),each=4)
province
list(year,province)
tapply(1:17,list(year,province))
tapply(1:12,list(year,province))
tapply(1:12,list(year,province),sum)
Total_Emission<-tapply(NEI$Emissions,NEI$year,sum,simplify="true")
?hclust
?ddply
attach(mtcars)
mtcars
str(mtcars)
?aggregate
a<-aggregate(cbind(mpg) ~ cyl+gear, FUN=mean)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
attach(NEI)
Emissions
c <- aggregate(cbind(Emissions) ~ year+type, Fun=sum)
?Fun
?aggragate
?aggregate
c <- aggregate(cbind(Emissions) ~ year+type, FUN=sum)
View(c)
d <- tapply(Emssions, list(year,type),sum)
d <- tapply(Emissions, list(year,type),sum)
View(d)
View(c)
str(d)
d[1]
d[2]
d[3]
d[5]
d[1][2]
summary(d)
mode(d)
d[12]
d[16]
d[17]
d$NON-ROAD
names(d)
name(d)
d <- tapply(Emissions, list(year,type),sum,simplify = FALSE)
View(d)
d[1]
d[2]
d[[1]]
d[[1]][2]
length(d)
str(Emissions)
str(NEI)
sub <- subset(NEI, fips=="24510",select=c("Emissions","year",type))
sub <- subset(NEI, fips=="24510",select=c(Emissions,year,type))
str(sub)
install.packages("reshape2")
library(reshape2)
cast(sub,year+type~Emissions,sum)
?reshape
install.packages("reshape")
library(reshape)
cast(sub,year+type~Emissions,sum)
attach(sub)
cast(sub,year+type~Emissions,sum)
sub
b <- melt(sub,id=(c("type","year")))
b
cast(b,type+year~Emissions,sum)
str(b)
b <- melt(sub,id=(c("type","year","Emissions")))
str(b)
b
cast(b,type+year~Emissions,sum)
set.seed(3435)
trainIndicator = rbinom(4601, size = 1, prob = 0.5)
table(trainIndicator)
table(trainIndicator)
?rbinom
?boxplot
installs.packages("kernlab")
install.packages("kernlab")
library(kernlab)
installed.packages()
library(kernlab)
data(spam)
str(spam[, 1:5])
source('C:/Users/wislish/Desktop/sample_structreData.R')
View(spam)
plot(trainSpam$capitalAve ~ trainSpam$type)
plot(log10(trainSpam[, 1:4] + 1))
as.numeric(trainSpam$type) - 1
as.numeric(trainSpam$type)
str(trainSpam)
costFunction = function(x, y) sum(x != (y > 0.5))
costFunction(3,4)
?par
?rnorm
library(datasets)
data(airquality)
a <- airquality
fit <- lm(Ozone ~ Wind +Temp + Solar.R, data= airquality)
str(fit)
summary(fit)
?xtable
View(airquality)
View(airquality)
?as.POSIXlt()
?split
class(airquality)
View(airquality)
split(airquality,airquality$wind)
str(airquality)
a <- split(airquality,airquality$wind)
View(airquality)
a <- split(airquality,airquality$Wind)
View(airquality)
a
str(a)
summary()
summary(a)
find(a,7.4)
find(a)=7.4
a
a[1]
a[2]
a[[1]][1]
class(a)
a[1][1]
a[1]
View(airquality)
a$1.7
a$"1.7"
a$"7.4"
a$"7.4"[1]
a$"7.4"[1,]
a$"7.4"[2,]
class(a$"7.4")
a$"7.4"$Wind
b <- sapply(a,nrow)
b
a
b
b <- sapply(a,mean)
b
any(is.na(a))
?any
is.na(a)
sample <- head(airquality)
View(sample)
names(sample)
sample[2]
sample[1]
mean(sample[2])
str(sample)
sum(sample[2])
sum(sample[2],na.rm=TRUE)
summary(sample[2])
mean(sample[2],na.rm=TURE)
mean(sample[2],na.rm=TRUE)
770/4
770/8
(149+190)/2
(169.5+118)/2
169.5*1.5
118+149
267/2
quantile(sample[2])
quantile(sample[2],na.rm=TRUE)
149-118
31*0.25
quantile(C(1,2,3,4,5))
b <- c(1,2,3,4,5)
b
class(b)
quantile(b)
b <- c(118,149,190,313)
quantile(b)
b <- c(1,2,3,4)
quantile(b)
b <- c(1,4,6,8)
quantile(b)
?quantile()
install.packages("Quandl")
library(devtools)
install.packages("devtools")
library(devtools)
install_github('R-package','quandl')
mydata = Quandl("FRED/GDP")
library(Quandl)
mydata = Quandl("FRED/GDP")
Quandl.auth("T1e55Xk6_hpcssUq7ETy")
mydata = Quandl("FRED/GDP")
View(mydata)
Quandl("GOOG/NASDAQ_AAPL", trim_start="1980-12-12", trim_end="2014-10-31", authcode="T1e55Xk6_hpcssUq7ETy")
a <- Quandl("GOOG/NASDAQ_AAPL", trim_start="1980-12-12", trim_end="2014-10-31", authcode="T1e55Xk6_hpcssUq7ETy")
a
str(a)
View(a)
tail(a)
?naiveBayes
?as.POSIXLt
?as.POSIXlt
?dnorm
?datasets
library(help = "datasets")
a <- airquality
a
View(a)
str(a)
b <- dnorm(a$Wind,15,3)
b
plot(b)
plot(a)
plot(a$Wind)
plot(function(x) dnorm(x, log = TRUE), -60, 50,
main = "log { Normal density }")
dnorm(a$Wind)
plot(dnorm(a$Wind))
plot(dnorm(a$Wind),mean=10)
plot(dnorm(a$Wind),mean="10")
plot(dnorm(a$Wind),mean=10,sd=3)
plot(dnorm(a$Wind,mean=10,sd=3))
plot(dnorm(a$Wind,mean=10))
getwd9)
getwd()
setwd(I:\大学学习\Geolife Trajectories 1.2\Geolife Trajectories 1.2\Data\000\Trajectory)
setwd(I:/大学学习/Geolife Trajectories 1.2/Geolife Trajectories 1.2/Data/000/Trajectory)
getwd()
ls()
help(read.table)
mydata <- read.table("user1.plt",header=FALSE,sep=",",skip=6)
View(mydata)
View(mydata)
class(mydata)
summary(mydata)
type(mydata)
mydata
mydata$v1
mydata$V1
mydata$V1[0]
mydata$V1[1]
help(read.table)
library(DMwR)
algae
summary(algae)
algae
head(algae)
hist(algae$mxPH,prob=T)
lines(density(algae$mxPH,na.rm=T))
boxplot(algae$oPO4,ylab='Orthophosphate (oPO4)')
View(mydata)
is.na(mydata)
num(is.na(mydata))
mydata
head(mydata)
mydata$V5
getwd()
ls
ls()
ls()
freTrack <- read.table("out1.txt",header=FALSE,sep=" ")
View(freTrack)
buffer <- read.table("out.txt",header=FALSE,sep=" ")
buffer <- read.table("out.txt",header=FALSE,sep=" ")
View(buffer)
freTrack <- freTrack[,V2:V5]
freTrack <- freTrack[,2:5]
freTrack
View(freTrack)
freTrack <- rbind(buffer,freTrack)
freTrack <- rbind(buffer[,1:4],freTrack[,1:4])
?rename
library(reshape)
rename(freTrack,c(V2="V1",V3="V2",V4="V3",V5="V4"))
View(freTrack)
freTrack
names(freTrack)
names(freTrack)[1:4] <- c("V1","V2","V3","V4")
names(freTrack)
freTrack <- rbind(buffer,freTrack)
freTrack
View(freTrack)
age <- runif(nrow(freTrack),min=1,max=4)
age
age <- sample(1:4,size=nrow(freTrack))
age <- sample(1:4,size=nrow(freTrack),replace=TRUE)
age
age[==1]
age[age==1,]
age
age <- data.frame(age)
age
age[age==1,]
age[==1,]
freTrack <- cbind(age,freTrack)
freTrack
freTrack$age
freTrack$age[age==1]
freTrack$age[age==1] <- "single"
freTrack$age
names(freTrack$age)
names(freTrack)
names(freTrack)[1]
names(freTrack)[1] <- "Marital Status"
names(freTrack)[1]
names(freTrack)
age
age <- sample(1:3,size=nrow(freTrack),replace=FALSE)
age <- sample(1:3,size=nrow(freTrack),replace=TRUE)
age
freTrack <- freTrack[,-age]
freTrack
View(freTrack)
View(buffer)
View(freTrack)
freTrack <- read.table("out1.txt",header=FALSE,sep=" ")
names(freTrack)[1:4] <- c("V1","V2","V3","V4")
View(freTrack)
freTrack <- freTrack[,2:5]
freTrack
View(freTrack)
names(freTrack)[1:4] <- c("V1","V2","V3","V4")
freTrack
View(freTrack)
freTrack <- rbind(buffer,freTrack)
freTrack
aage
age
age[age==1]
age[age==1] <- "single"
age[age==1]
age
age[age==2] <- "married"
age
age[age==3] <- "divorced"
age
names(age)
Marital Status <- data.frame(age)
Marital-Status <- data.frame(age)
age
Marital-Status <- data.frame(c(age)
)
age <- data.frame(age)
names(age)
names(age)[1] <- "Marital Status"
age
View(age)
freTrack
freTrack <- cbind(age,fre)
freTrack <- cbind(age,freTrack)
freTrack
rnorm(106,32,1)
rnorm(106,32,10)
rnorm(106,32,5)
rnorm(106,32)
?rnorm
source('~/.active-rstudio-document')
View(freTrack)
freTrack <- read.table("out1.txt",header=FALSE,sep=" ")
View(freTrack)
clear
freTrack <- read.table("out1.txt",header=FALSE,sep=" ")
View(freTrack)
setwd("I:/大学学习/大四上/Projects/code")
freTrack <- read.table("out1.txt",header=FALSE,sep=" ")
freTrack <- read.table("out1.txt",header=FALSE,sep=" ")
freTrack <- freTrack[,2:5]
Marital Status <- sample(1:3,size=nrow(freTrack),replace=TRUE)
Marital Status[Marital Status==1] <- "single"
Marital Status[Marital Status==2] <- "married"
Marital Status[Marital Status==3] <- "divorced"
Marital Status < data.frame(Marital Status)
freTrack <- cbind(Marital Status,freTrack)
freTrack <- read.table("out1.txt",header=FALSE,sep=" ")
freTrack <- freTrack[,2:5]
MaritalStatus <- sample(1:3,size=nrow(freTrack),replace=TRUE)
MaritalStatus[MaritalStatus==1] <- "single"
MaritalStatus[MaritalStatus==2] <- "married"
MaritalStatus[MaritalStatus==3] <- "divorced"
MaritalStatus < data.frame(MaritalStatus)
freTrack <- cbind(MaritalStatus,freTrack)
View(freTrack)
source('~/.active-rstudio-document')
source('I:/大学学习/大四上/Projects/code/processData.R')
MaritalStatus <- sample(1:3,size=nrow(freTrack),replace=TRUE)
MaritalStatus[MaritalStatus==1] <- "single"
MaritalStatus[MaritalStatus==2] <- "married"
MaritalStatus[MaritalStatus==3] <- "divorced"
MaritalStatus < data.frame(MaritalStatus)
source('I:/大学学习/大四上/Projects/code/processData.R')
View(freTrack)
rand <- randgen(1000,32)
View(rand)
rand <- rpois(106,32)
source('I:/大学学习/大四上/Projects/code/processData.R')
source('I:/大学学习/大四上/Projects/code/processData.R')
View(age)
age <- c()
age <- randgen(1000,32)
source('I:/大学学习/大四上/Projects/code/processData.R')
View(age)
age <- randgen(1000,32)
View(age)
age <- data.frame(age)
View(age)
freTrack <- cbind(MaritalStatus,freTrack)
source('I:/大学学习/大四上/Projects/code/processData.R')
source('I:/大学学习/大四上/Projects/code/processData.R')
age <- age[,1]
age <- randgen(106,32)
age
age[,1]
source('I:/大学学习/大四上/Projects/code/processData.R')
View(age)
View(freTrack)
source('I:/大学学习/大四上/Projects/code/processData.R')
View(freTrack)
names(freTrack)
names(freTrack)[4:7] <- c("lat1","lon2","lat2","lon2")
names(freTrack)
View(freTrack)
source('I:/大学学习/大四上/Projects/code/processData.R')
View(freTrack)
write.table(freTrack,"FrequentTrackData")
write.table(freTrack,"FrequentTrackData.txt")
freTrack$Gender <- as.factor(freTrack$Gender)
View(freTrack)
freTrack
str(freTrack)
write.table(freTrack,"FrequentTrackData.txt")
freTrack$Age
freTrack$Gender
freTrack$MaritalStatus
write.table(freTrack,"FrequentTrackData.txt",row.names=False)
write.table(freTrack,"FrequentTrackData.txt",row.names=FALSE)
write.table(freTrack,"FrequentTrackData.txt",row.names=FALSE,qmethod="d")
write.table(freTrack,"FrequentTrackData.txt",row.names=FALSE,quote=FALSE)
